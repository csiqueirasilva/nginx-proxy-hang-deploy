worker_processes auto;

events {
    worker_connections 4096;
    multi_accept on;
}

http {
    server {
        listen 80;
        
        location / {
            content_by_lua_block {
                local flag_file = "/tmp/release.flag"
                local file = io.open(flag_file, "r")

                while not file do
                    ngx.sleep(1)
                    file = io.open(flag_file, "r")
                end
                if file then
                    file:close()
                end

                local scheme = ngx.var.scheme  
                local host = ngx.var.http_host or ngx.var.host
                local target = scheme .. "://" .. host .. ngx.var.request_uri
                ngx.redirect(target, ngx.HTTP_MOVED_TEMPORARILY)
            }
        }
    }
}
